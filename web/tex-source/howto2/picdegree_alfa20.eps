%!PS-Adobe-2.0
%%Title: pics/cmplxdegree_a20.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Dec 12 19:04:54 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 770 554
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 420 M
63 0 V
5933 0 R
-63 0 V
882 420 M
gsave 0 setgray
( 0.0001) Rshow
grestore
1.000 UL
LTb
966 841 M
31 0 V
5965 0 R
-31 0 V
966 1088 M
31 0 V
5965 0 R
-31 0 V
966 1263 M
31 0 V
5965 0 R
-31 0 V
966 1399 M
31 0 V
5965 0 R
-31 0 V
966 1509 M
31 0 V
5965 0 R
-31 0 V
966 1603 M
31 0 V
5965 0 R
-31 0 V
966 1684 M
31 0 V
5965 0 R
-31 0 V
966 1756 M
31 0 V
5965 0 R
-31 0 V
966 1820 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 0.001) Rshow
grestore
1.000 UL
LTb
966 2241 M
31 0 V
5965 0 R
-31 0 V
966 2488 M
31 0 V
5965 0 R
-31 0 V
966 2663 M
31 0 V
5965 0 R
-31 0 V
966 2799 M
31 0 V
5965 0 R
-31 0 V
966 2909 M
31 0 V
5965 0 R
-31 0 V
966 3003 M
31 0 V
5965 0 R
-31 0 V
966 3084 M
31 0 V
5965 0 R
-31 0 V
966 3156 M
31 0 V
5965 0 R
-31 0 V
966 3220 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 0.01) Rshow
grestore
1.000 UL
LTb
966 3641 M
31 0 V
5965 0 R
-31 0 V
966 3888 M
31 0 V
5965 0 R
-31 0 V
966 4063 M
31 0 V
5965 0 R
-31 0 V
966 4199 M
31 0 V
5965 0 R
-31 0 V
966 4309 M
31 0 V
5965 0 R
-31 0 V
966 4403 M
31 0 V
5965 0 R
-31 0 V
966 4484 M
31 0 V
5965 0 R
-31 0 V
966 4556 M
31 0 V
5965 0 R
-31 0 V
966 4620 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 0.1) Rshow
grestore
1.000 UL
LTb
966 420 M
0 63 V
0 4137 R
0 -63 V
966 280 M
gsave 0 setgray
( 0.0001) Cshow
grestore
1.000 UL
LTb
1417 420 M
0 31 V
0 4169 R
0 -31 V
1681 420 M
0 31 V
0 4169 R
0 -31 V
1868 420 M
0 31 V
0 4169 R
0 -31 V
2014 420 M
0 31 V
0 4169 R
0 -31 V
2132 420 M
0 31 V
0 4169 R
0 -31 V
2233 420 M
0 31 V
0 4169 R
0 -31 V
2320 420 M
0 31 V
0 4169 R
0 -31 V
2396 420 M
0 31 V
0 4169 R
0 -31 V
2465 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 0.001) Cshow
grestore
1.000 UL
LTb
2916 420 M
0 31 V
0 4169 R
0 -31 V
3180 420 M
0 31 V
0 4169 R
0 -31 V
3367 420 M
0 31 V
0 4169 R
0 -31 V
3513 420 M
0 31 V
0 4169 R
0 -31 V
3631 420 M
0 31 V
0 4169 R
0 -31 V
3732 420 M
0 31 V
0 4169 R
0 -31 V
3819 420 M
0 31 V
0 4169 R
0 -31 V
3895 420 M
0 31 V
0 4169 R
0 -31 V
3964 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 0.01) Cshow
grestore
1.000 UL
LTb
4415 420 M
0 31 V
0 4169 R
0 -31 V
4679 420 M
0 31 V
0 4169 R
0 -31 V
4866 420 M
0 31 V
0 4169 R
0 -31 V
5012 420 M
0 31 V
0 4169 R
0 -31 V
5130 420 M
0 31 V
0 4169 R
0 -31 V
5231 420 M
0 31 V
0 4169 R
0 -31 V
5318 420 M
0 31 V
0 4169 R
0 -31 V
5394 420 M
0 31 V
0 4169 R
0 -31 V
5463 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 0.1) Cshow
grestore
1.000 UL
LTb
5914 420 M
0 31 V
0 4169 R
0 -31 V
6178 420 M
0 31 V
0 4169 R
0 -31 V
6365 420 M
0 31 V
0 4169 R
0 -31 V
6511 420 M
0 31 V
0 4169 R
0 -31 V
6629 420 M
0 31 V
0 4169 R
0 -31 V
6730 420 M
0 31 V
0 4169 R
0 -31 V
6817 420 M
0 31 V
0 4169 R
0 -31 V
6893 420 M
0 31 V
0 4169 R
0 -31 V
6962 420 M
0 63 V
0 4137 R
0 -63 V
0 -4277 R
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
966 420 M
5996 0 V
0 4200 V
-5996 0 V
966 420 L
LTb
140 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(P[Degree / n > x]) Cshow
grestore
grestore
LTb
3964 70 M
gsave 0 setgray
(Degree / n) Cshow
grestore
LTb
3964 4830 M
gsave 0 setgray
(Topology in-degree distribution \(size = 10000 nodes, alpha = 20\)) Cshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4487 M
gsave 0 setgray
(cdf) Rshow
grestore
LT0
966 4520 Pls
1417 4307 Pls
1681 4176 Pls
1868 4081 Pls
2014 4009 Pls
2132 3931 Pls
2233 3880 Pls
2320 3828 Pls
2396 3792 Pls
2465 3742 Pls
2527 3685 Pls
2584 3641 Pls
2636 3604 Pls
2684 3577 Pls
2729 3539 Pls
2771 3490 Pls
2810 3458 Pls
2848 3411 Pls
2883 3389 Pls
2916 3365 Pls
2948 3331 Pls
2978 3326 Pls
3007 3289 Pls
3035 3283 Pls
3062 3272 Pls
3087 3261 Pls
3112 3255 Pls
3135 3220 Pls
3158 3208 Pls
3180 3169 Pls
3202 3169 Pls
3222 3156 Pls
3242 3142 Pls
3262 3121 Pls
3281 3121 Pls
3299 3114 Pls
3317 3084 Pls
3334 3061 Pls
3351 3053 Pls
3367 3029 Pls
3384 3003 Pls
3399 3003 Pls
3415 3003 Pls
3430 3003 Pls
3444 2986 Pls
3458 2949 Pls
3472 2929 Pls
3486 2919 Pls
3500 2919 Pls
3513 2899 Pls
3526 2867 Pls
3538 2857 Pls
3551 2845 Pls
3563 2822 Pls
3575 2811 Pls
3587 2799 Pls
3598 2786 Pls
3609 2761 Pls
3621 2748 Pls
3631 2707 Pls
3642 2678 Pls
3653 2663 Pls
3663 2647 Pls
3673 2632 Pls
3684 2632 Pls
3693 2599 Pls
3703 2564 Pls
3713 2527 Pls
3722 2508 Pls
3732 2508 Pls
3741 2508 Pls
3750 2508 Pls
3759 2508 Pls
3768 2488 Pls
3777 2488 Pls
3785 2488 Pls
3794 2446 Pls
3802 2424 Pls
3811 2401 Pls
3819 2352 Pls
3827 2326 Pls
3835 2326 Pls
3843 2326 Pls
3850 2326 Pls
3858 2271 Pls
3866 2271 Pls
3873 2210 Pls
3881 2210 Pls
3888 2143 Pls
3895 2143 Pls
3903 2106 Pls
3910 2067 Pls
3917 2067 Pls
3924 2067 Pls
3931 2067 Pls
3937 2067 Pls
3944 2067 Pls
3951 2067 Pls
3957 2067 Pls
3964 1980 Pls
3970 1980 Pls
3977 1878 Pls
3983 1878 Pls
3990 1878 Pls
3996 1820 Pls
4002 1756 Pls
4008 1684 Pls
4014 1684 Pls
4020 1684 Pls
4026 1684 Pls
4032 1684 Pls
4038 1684 Pls
4044 1684 Pls
4049 1603 Pls
4055 1603 Pls
4061 1603 Pls
4066 1603 Pls
4072 1603 Pls
4077 1509 Pls
4083 1399 Pls
4088 1088 Pls
4093 1088 Pls
4099 1088 Pls
4104 1088 Pls
4109 841 Pls
4114 841 Pls
4120 841 Pls
4125 841 Pls
4130 841 Pls
4135 841 Pls
4140 841 Pls
4145 420 Pls
6594 4487 Pls
1.000 UL
LTb
966 420 M
5996 0 V
0 4200 V
-5996 0 V
966 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
